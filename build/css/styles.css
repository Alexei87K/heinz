/* подключаем сетку в px */

@font-face {
  font-family: 'Montserrat';
  font-style: normal;
  font-weight: 400;
  font-display: swap;
  src: local('Montserrat Regular'), local('Montserrat-Regular'), url(https://fonts.gstatic.com/s/montserrat/v13/JTUSjIg1_i6t8kCHKm459Wlhzg.ttf) format('truetype');
}

@font-face {
  font-family: 'Montserrat';
  font-style: normal;
  font-weight: 700;
  font-display: swap;
  src: local('Montserrat Bold'), local('Montserrat-Bold'), url(https://fonts.gstatic.com/s/montserrat/v13/JTURjIg1_i6t8kCHKm45_dJE3gnD-w.ttf) format('truetype');
}

/* используем её примеси */

html,
body {
  font-size: 16px;
  padding: 0;
  margin: 0;
}

ul li {
  text-align: start;
  list-style: none;
  padding: 0;
  margin: 0;
  color: #000;
}

a {
  text-decoration: none;
}

img {
  max-width: 100%;
}

.wrapper {
  max-width: 1180px;
  margin: 0 auto;
  padding-left: 30px;
  padding-right: 30px;
}

.fas,
.far {
  font-size: 30px;
  color: #fff;
}

/* START БЛОК HEADER */

.headerBlock {
  padding: 10px 0;
  background-color: #232838;
}

.header {
  display: -webkit-box;
  display: flex;
  position: relative;
}

.header__gamb {
  position: absolute;
  top: 15px;
  right: 0;
}

.header__ul {
  display: -webkit-box;
  display: flex;
  padding-top: 15px;
  padding-left: 20px;
}

.header__ul li {
  border-right: 2px solid #fff;
  padding: 0 20px;
  z-index: 1010;
}

.header__ul li:first-child {
  padding: 0 20px 0 6px;
}

.header__ul li:last-child {
  padding-left: 40px;
  border: 0px;
}

.header__ul li:last-child::before {
  content: url(../img/btnSeach.png);
  position: absolute;
  margin-top: 2px;
  margin-left: -25px;
}

.header__ul li:hover a {
  color: #348d4b;
}

.header__ul li .hideEl {
  display: none;
  position: absolute;
  width: 247px;
  min-height: 300px;
  top: 55px;
  padding: 0;
  background-color: #fff;
  z-index: 1010;
}

.header__ul li .hideEl__ul {
  padding: 5px 5px 5px 20px;
}

.header__ul li .hideEl__ul li {
  border-bottom: 1px solid #e9e9eb;
  background-color: #fff;
  padding: 0;
}

.header__ul li .hideEl__ul a {
  color: #14192b;
  font-family: "Titillium Web";
  font-size: 14px;
  font-weight: 400;
  line-height: 40px;
  text-transform: none;
}

.header__ul li .hideEl__ul:after {
  content: '';
  position: absolute;
  top: -8px;
  width: 0;
  height: 0;
  border-bottom: 8px solid #fff;
  border-right: 8px solid transparent;
  border-left: 8px solid transparent;
}

.header__ul li:hover .hideEl {
  display: block;
}

.header__ul a {
  font-family: Montserrat;
  font-size: 14px;
  font-weight: 400;
  line-height: 0px;
  text-transform: uppercase;
  color: #fff;
}

.header__gamb {
  display: none;
  cursor: pointer;
}

/* END БЛОК */

/*  imgBL */

.imgBL {
  position: relative;
}

.imgBL__blAbs {
  position: absolute;
  top: 23%;
  left: 20%;
  transform-translate: -50% -50%;
  padding-right: 100px;
}

.imgBL__title {
  color: #ffffff;
  font-family: "Titillium Web";
  font-size: 3.42007435vw;
  font-weight: 400;
  line-height: 26px;
  margin-bottom: 2.26073851vw;
}

.imgBL__p {
  max-width: 720px;
  color: #ffffff;
  font-family: "Titillium Web";
  font-size: 1.91740413vw;
  font-weight: 400;
  margin: 15px auto;
}

.imgBL__blBtn {
  text-align: center;
}

/* END imgBL */

.c-title {
  text-align: center;
  color: #232838;
  font-family: "Titillium Web";
  font-size: 3.38983051vw;
  font-weight: 400;
  text-transform: uppercase;
  margin: 30px 0;
}

.newsBL {
  margin: 30px 0;
}

.newsBL .news .row {
  margin-bottom: 20px;
  display: -webkit-box;
  display: flex;
  flex-wrap: wrap;
  margin-left: -15px;
  margin-right: -15px;
  -webkit-box-pack: center;
  justify-content: center;
}

.newsBL .news .row .col {
  box-sizing: border-box;
  word-wrap: break-word;
  margin-left: 15px;
  margin-right: 15px;
  width: calc(25% - 30px);
  border: 0px solid #ccc;
}

.newsBL .news .row .col .center {
  position: relative;
  overflow: hidden;
  height: 98%;
}

.newsBL .news .row .col .center__content {
  position: absolute;
  top: 0;
  left: 0;
  padding: 15px 15px 20px 15px;
  background: rgba(255, 255, 255, 0.5);
  min-height: 100%;
  margin-top: 56%;
}

.newsBL .news .row .col .center__content:hover {
  margin-top: 0;
}

.newsBL .news .row .col .center__title {
  max-width: 250px;
  font-family: Montserrat;
  font-size: 1.04633782vw;
  font-weight: 700;
  text-transform: uppercase;
  color: #1f7c8f;
}

.newsBL .news .row .col .center__p {
  max-width: 250px;
  color: #000000;
  font-family: "Titillium Web";
  font-size: 1.19581465vw;
  font-weight: 400;
  padding: 0.34443169vw 0;
  line-height: 1.4;
}

/**/

.btnBL {
  margin-top: 15px;
}

.btnBL__btn {
  margin-top: 30px;
  padding: 0.44738416vw 1.56846039vw;
  box-shadow: 0 3px 3px rgba(0, 0, 0, 0.25);
  border-radius: 2px;
  background-color: #232838;
  background-image: -webkit-gradient(linear, left bottom, left top, from(#1fa336), to(#3dc054));
  background-image: -webkit-linear-gradient(bottom, #1fa336 0%, #3dc054 100%);
  background-image: linear-gradient(to top, #1fa336 0%, #3dc054 100%);
  color: #ffffff;
  font-family: Montserrat;
  font-size: 1.04633782vw;
  font-weight: 700;
  text-transform: uppercase;
}

.btnBL__btn_size {
  padding: 10px 55px;
}

.btnBL__btn_first {
  padding: 10px 35px;
}

.btnBL_center {
  text-align: center;
  margin-top: 35px;
}

.btnBL_display {
  display: inline-block;
}

/**/

.footerTitle__name {
  font-family: 'Montserrat', sans-serif;
  font-weight: bold;
  font-size: 14px;
}

/* FOOTER */

.footer {
  margin: 25px 0 0 0;
}

.footer .footerOne {
  background: #1f7c8f;
  padding: 0 0 25px 0;
}

.footer .footerOne .f-title {
  text-align: center;
  padding: 25px 0;
  color: #ffffff;
  font-family: "Titillium Web";
  font-size: 3.42007435vw;
  text-transform: uppercase;
}

.footer .footerOne .f-flex {
  display: -webkit-box;
  display: flex;
  flex-wrap: wrap;
  margin-left: -15px;
  margin-right: -15px;
}

.footer .footerOne .f-flex .f-col {
  box-sizing: border-box;
  word-wrap: break-word;
  margin-left: 15px;
  margin-right: 15px;
  width: calc(50% - 30px);
}

.footer .footerOne .f-flex .f-col input {
  width: 100%;
  padding: 8px 0 8px 5px;
  border-radius: 3px;
}

.footer .footerOne .f-flex .f-col .margin {
  margin-bottom: 20px;
}

.footer .footerOne .f-flex .f-col .sendenBL {
  margin-top: 10px;
}

.footer .footerOne .f-flex .f-col p {
  display: inline-block;
  max-width: 350px;
  font-family: "Titillium Web";
  font-size: 14px;
  line-height: 1;
  color: #fff;
}

.footer .footerTwo {
  padding-top: 15px;
  color: #fff;
  background: #0e5f70;
}

.footer .footerTwo .navBL .flexBL {
  display: -webkit-box;
  display: flex;
}

.footer .footerTwo .navBL .flexBL ul {
  padding: 0 0 0 0;
}

.footer .footerTwo .navBL .flexBL ul:first-child {
  padding-right: 5.90405904vw;
}

.footer .footerTwo .navBL .flexBL li a {
  line-height: 1.8;
  color: #fff;
}

.footer .footerTwo .f-flex {
  display: -webkit-box;
  display: flex;
  flex-wrap: wrap;
  margin-left: -15px;
  margin-right: -15px;
}

.footer .footerTwo .f-flex .f-col {
  box-sizing: border-box;
  word-wrap: break-word;
  margin-left: 15px;
  margin-right: 15px;
  width: calc(50% - 30px);
}

.footer .footerTwo .f-flex .f-col .updateBL {
  margin-top: 20px;
}

.footer .footerTwo .f-flex .f-col .updateBL .s-inp {
  width: 56%;
  padding: 8px 0 8px 5px;
  border-radius: 3px;
  margin-right: 20px;
}

.footer .footerTwo .f-flex .f-col .DTA {
  margin-top: 50px;
}

@media screen and (max-width: 1550px) {
  .header__menu {
    margin: 0 auto;
  }
}

@media screen and (max-width: 1250px) {
  .header__ul {
    position: absolute;
    top: 50%;
    left: 50%;
    transform-translate: -50% -50%;
    display: none;
    z-index: 1000;
    color: #000;
    background: #ffffff;
    margin-top: 6%;
    margin-left: -20%;
    width: 400px;
  }

  .header__ul li:first-child {
    padding: 0;
  }

  .header__ul li a {
    font-size: 1.39581256vw;
    color: #000;
  }

  .header__ul li:last-child {
    padding-top: 10px;
    border-top: 1px solid #ccc;
  }

  .header__ul li {
    padding: 5px 0;
    border: 0;
  }

  .header__ul li .hideEl {
    top: 85px;
  }

  .header__gamb {
    display: block;
  }
}

@media screen and (max-width: 1080px) {
  .wrapper {
    padding-left: 15px;
    padding-right: 15px;
  }
}

@media screen and (max-width: 992px) {
  .newsBL .news .row .col {
    width: calc(41.66666666666667% - 30px);
  }

  .newsBL .news .row .col {
    padding-left: 5%;
    margin-bottom: 25px;
  }

  .newsBL .news .row .col .center__content {
    margin-top: 46%;
  }

  .newsBL .news .row .col .center__title {
    font-size: 1.54633782vw;
  }

  .newsBL .news .row .col .center__p {
    font-size: 1.54633782vw;
  }
}

@media screen and (max-width: 700px) {
  .header__ul {
    width: 200px;
    left: 62%;
  }
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
